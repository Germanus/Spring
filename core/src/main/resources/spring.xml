<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context
        	http://www.springframework.org/schema/context/spring-context-2.5.xsd
        	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
        	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
	xmlns:context="http://www.springframework.org/schema/context">

	<bean id="afterBean" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="my.ilya.interceptor.MtBean">
				<property name="firstName" value="AAA" />
			</bean>
		</property>
		<property name="interceptorNames">
			<list>
				<idref bean="profilingAdvice" />
			</list>
		</property>
		<property name="proxyTargetClass" value="true" />
	</bean>
	
	<bean id="profilingAdvice" class="my.ilya.interceptor.SimpleProfilingAroundAdvice" />

	<context:annotation-config />
	<context:component-scan base-package="my.ilya.main" />
	<context:component-scan base-package="my.ilya.dao" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:hsql://localhost/hiber" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="2" />
		<property name="maxActive" value="5" />
	</bean>

	<bean id="dao.SimpleJdbcDaoImpl" class="my.ilya.dao.SimpleJdbcDaoImpl">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="triangle" class="my.ilya.model.Triangle" init-method="myInit"
		destroy-method="cleanUp">
		<property name="name" value="Triangle name" />
		<property name="points">
			<list>
				<ref bean="pointA" />
				<ref bean="pointB" />
				<ref bean="pointC" />
			</list>
		</property>

	</bean>

	<bean id="circle" class="my.ilya.model.Circle">
		<property name="name" value="cirname"></property>
	</bean>

	<bean id="shapeService" class="my.ilya.service.ShapeService">
		<property name="circle" ref="circle"></property>
	</bean>

	<bean name="loggingAspect" class="my.ilya.aspect.LoggingAspect" />

	<bean id="pointA" class="my.ilya.model.Point">
		<qualifier value="circleRelated" />
		<property name="x" value="${pointA.pointX}" />
		<property name="y" value="${pointA.pointY}" />
	</bean>

	<bean id="pointB" class="my.ilya.model.Point">
		<property name="x" value="5" />
		<property name="y" value="5" />
	</bean>

	<bean id="pointC" class="my.ilya.model.Point">
		<property name="x" value="-5" />
		<property name="y" value="-5" />
	</bean>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:pointsconfig.properties" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>mymessages</value>
			</list>
		</property>
	</bean>

	<!-- org.springframework.orm.hibernate4.LocalSessionFactoryBean вместо org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="packagesToScan" value="model"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				</prop>

			</props>
		</property>
	</bean>

	<!-- <bean id="HibernateDaoImpl" class="dao.HibernateDaoImpl"/> -->
	<!-- 
	<aop:config proxy-target-class="false" expose-proxy="true">
		<aop:aspect id="loggingAspect" ref="loggingAspect">
			<aop:pointcut id="allGetters" expression="execution(* getCircle*())" />
			<aop:around pointcut-ref="allGetters" method="myAroundAdvice2" />
		</aop:aspect>
	</aop:config> -->

	<!-- <bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator"> 
		<property name="proxyTargetClass" value="true"/> </bean> -->


	<!-- <tx:annotation-driven proxy-target-class="true" />  -->
	
	
	<!--<aop:config proxy-target-class="true" />-->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true" /> -->




</beans>
